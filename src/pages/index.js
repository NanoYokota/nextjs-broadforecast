import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import React, { useState, useEffect, useRef } from 'react'
import axios from 'axios';

// 関数コンポーネント
export default function Home() {
  const [ cityName, setCityName ] = useState( "福岡" );
  const [ url, setUrl ] = useState( "" );
  const [ responseCode, setResponseCode ] = useState( null );
  const [ weather, setWeather ] = useState( "" );
  const [ error, setError ] = useState( "" );
  const API_KEY = process.env.NEXT_PUBLIC_WEATHER_API_KEY;
  const input = useRef( null );
  console.log( "input.current ↓" );
  console.log( input.current );

  const buildUrl = city => {
    return `https://api.openweathermap.org/data/2.5/weather?q=${ city }&units=metric&appid=${ API_KEY }&lang=ja`;
  };

  const handleInput = ( event ) => {
    const city = event.target.value;
    setCityName( city );
  }

  const fetchWeather = () => {
    axios.get( url )
      .then( res => {
        const resCode = res.status;
        const weather = res.data.weather[ 0 ].description;
        setResponseCode( resCode );
        setWeather( weather );
        setError( "" );
        input.current.disabled = true;
      } )
      .catch( err => {
        console.log( err );
        setResponseCode( null );
        setWeather( "" );
        setError( err.message );
      } );
  }

  const enableInput = () => {
    if ( !input.current.disabled ) {
      return;
    }
    input.current.disabled = false;
  }

  useEffect( () => {
    const url = buildUrl( cityName );
    setUrl( url );
  } );

  return (
    <>
      <Head>
        <title>Broadcast App</title>
        <meta name="description" content="天気を確認できるアプリです。" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1>今日の天気を調べてみよう！</h1>
        <form>
          <input name="city" onChange={ handleInput } value={ cityName } ref={ input } onClick={ enableInput } />
          <p>地域：{ cityName }</p>
          <p>URL：{ url }</p>
          <button type="button" onClick={ fetchWeather }>Check weather!</button>
          <p>レスポンス：{ responseCode }</p>
          <p>天気：{ weather }</p>
          <p className={ styles.error }>エラー：{ error }</p>
        </form>
      </main>
    </>
  );
}

// クラスコンポーネント
// export default class Home extends React.Component {
//   constructor( props ) {
//     super( props );
//     this.state = {
//       cityName: "",
//       url: "",
//       responseCode: null,
//       weather: "",
//       error: "",
//     };
//     this.handleInput = this.handleInput.bind( this );
//     this.fetchWeather = this.fetchWeather.bind( this );
//   }

//   handleInput( event ) {
//     const city = event.target.value;
//     const url = `https://api.openweathermap.org/data/2.5/weather?q=${ city }&units=metric&appid=${ process.env.NEXT_PUBLIC_WEATHER_API_KEY }&lang=ja`;
//     this.setState( { cityName: city, url: url, } );
//   }

//   fetchWeather() {
//     axios.get( this.state.url )
//       .then( res => {
//         const resCode = res.status;
//         const weather = res.data.weather[ 0 ].description;
//         this.setState( { responseCode: resCode, weather: weather, } );
//       } )
//       .catch( err => {
//         console.log( err );
//         this.setState( { error: err.message, } );
//       } );
//   }

//   render() {
//     return (
//       <>
//         <Head>
//           <title>Broadcast App</title>
//           <meta name="description" content="Generated by create next app" />
//           <meta name="viewport" content="width=device-width, initial-scale=1" />
//           <link rel="icon" href="/favicon.ico" />
//         </Head>
//         <main>
//           <h1>今日の天気を調べてみよう！</h1>
//           <form>
//             <input name="city" onChange={ this.handleInput } value={ this.state.city } />
//             <p>地域：{ this.state.cityName }</p>
//             <p>URL：{ this.state.url }</p>
//             <button type="button" onClick={ this.fetchWeather }>Check weather!</button>
//             <p>レスポンス：{ this.state.responseCode }</p>
//             <p>天気：{ this.state.weather }</p>
//             <p className={ styles.error }>エラー：{ this.state.error }</p>
//           </form>
//         </main>
//       </>
//     );
//   }
// }
